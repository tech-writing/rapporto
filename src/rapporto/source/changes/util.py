import datetime
import os
from io import StringIO

project_blacklist = ["gitstats"]


class Project:
    def __init__(self, name="", path="", vcs=""):
        self.name = name
        self.path = path
        self.vcs = vcs
        self.changes_file = None

    def __str__(self):
        return "zt.manticore.Project={0}".format(self.name)

    def __repr__(self):
        return str(self)


def walk_projects(source_directory):
    """Scans all main level directories in the projects directory"""
    for project_name in sorted(os.listdir(source_directory)):
        if project_name in project_blacklist:
            continue
        project_path = os.path.join(source_directory, project_name)
        if os.path.isdir(project_path):
            subdirs = os.listdir(project_path)
            vcs = None
            if ".svn" in subdirs:
                vcs = "svn"
            if ".git" in subdirs:
                vcs = "git"
            if vcs:
                project = Project(project_name, project_path, vcs)
                yield project


def now():
    return datetime.datetime.now().strftime("%Y-%m-%d %H:%M")


def rest_header(title="", generator=""):
    buffer = StringIO()
    buffer.write(":orphan:\n\n")
    buffer.write(".. note:: Autogenerated by ``{0}`` on {1}".format(generator, now()))
    buffer.write("\n\n")
    buffer.write("=" * len(title) + "\n")
    buffer.write(title + "\n")
    buffer.write("=" * len(title) + "\n")
    buffer.write("\n")
    buffer.seek(0)
    return buffer.read()
